["n, pos, l, r = map(int, input().split())\n\nif l > 1 and r < n:\n    if l <= pos and pos <= r:\n        if pos - l < r - pos:\n            print(pos - l + 1 + r - l + 1)\n        else:\n            print(r - pos + 1 + r - l + 1)\n    elif pos > r:\n        print(pos - r + 1 + r - l + 1)\n    else:\n        print(l - pos + 1 + r - l + 1)\nelif l == 1 and r < n:\n    print(int(abs(pos - r)) + 1)\nelif l > 1 and r == n:\n    print(int(abs(pos - l)) + 1)\nelse:\n    print(0)", "from sys import stdin as cin\nfrom sys import stdout as cout\n\ndef main():\n    n, pos, l, r = list(map(int, cin.readline().split()))\n    if l == 1 and r == n:\n        print(0)\n        return\n    if l == 1:\n        print(1 + abs(r - pos))\n        return\n    if r == n:\n        print(1 + abs(pos - l))\n        return\n    if l == r:\n        print(2 + abs(pos - l))\n        return\n    print(2 + min(abs(r - pos), abs(l - pos)) + r - l)\n\nmain()\n", "n, p,l,r =map(int, input().split())\n\ns1,s2 = 0, 0\nl1,l2,r1,r2 = 0, 0 ,0 ,0\np1 = p\nif l > 1:\n    l1 += abs(p - l)\n    l1 += 1\n    p1 = l\nif r < n:\n    r1 += abs(r - p1)\n    r1 += 1\ns1 = l1+r1\np2 = p\nif r < n:\n    r2 += abs(r - p2)\n    r2 += 1\n    p2 = r\nif l > 1:\n    l2 += abs(p2 - l)\n    l2 += 1\ns2 = l2+r2\nprint(min(s1, s2))", "n, pos, l, r = map(int, input().split())\nif (l <= pos <= r):\n\tif (l == 1 and r == n):\n\t\tprint(0)\n\telif (l == 1 and r < n):\n\t\tprint(r - pos + 1)\n\telif (r == n and l > 1):\n\t\tprint(pos - l + 1)\n\telse:\n\t\tprint(r - l + min(r - pos, pos - l) + 2)\nelif (pos < l):\n\tif (r == n):\n\t\tprint(l - pos + 1)\n\telse:\n\t\tprint(r - pos + 2)\nelif (pos > r):\n\tif (l == 1):\n\t\tprint(pos - r + 1)\n\telse:\n\t\tprint(pos - l + 2)", "n, pos, l, r = list(map(int, input().split()))\n\nif l == 1 and r == n:\n    print(0)\n\nelse:\n    if l == 1 and r != n:\n        print(abs(pos - r) + 1)\n\n    elif l != 1 and r == n:\n        print(abs(pos - l) + 1)\n\n    else:\n        if l <= pos <= r:\n            print(r - l + 2 + min(abs(pos - l), abs(pos - r)))\n\n        elif pos < l:\n            print(r - l + 2 + abs(pos - l))\n\n        else:\n            print(r - l + 2 + abs(pos - r))\n", "n,pos,l,r = list(map(int,input().split()))\nif (pos > r):\n    if (l == 1):\n        print(pos-r+1)\n    else:\n        print(pos-l+2)\nelif(pos < l):\n    if (r == n):\n        print(l-pos+1)\n    else:\n        print(r-pos+2)\nelse:\n    if (l == 1 and r == n):\n        print(0)\n    elif l == 1:\n        print(r-pos+1)\n    elif r == n:\n        print(pos-l+1)\n    else:\n        print(r-l + min(pos-l, r-pos) + 2)\n    \n", "n, p, l, r = map(int, input().split())\nif l == 1:\n    if r == n:\n        print(0)\n    else:\n        print(abs(p - r) + 1)\nelif r == n:\n    print(abs(l - p) + 1)\nelse:\n    print(min(abs(p - l), abs(p - r)) + abs(r - l) + 2)", "n, pos, l, r = list(map(int, input().split()))\n\nl_close = l == 1\nr_close = r == n\nans = 0\nif l_close and r_close:\n\tpass\nelif l_close:\n\tans += abs(pos - r) + 1\nelif r_close:\n\tans += abs(pos - l) + 1\nelse:\n\tans += min(abs(pos - r), abs(pos - l)) + 1 + abs(l - r) + 1\n\nprint(ans)\n", "import itertools as it, math, functools as ft\nn, pos, l, r = map(int, input().split())\nres = 0\nif l == 1:\n\tif r == n:\n\t\tres = 0\n\telse:\n\t\tres = abs(pos - r) + 1\nelse:\n\tif r == n:\n\t\tres = abs(pos - l) + 1\n\telse:\n\t\txl = abs(pos - l)\n\t\txr = abs(r - pos)\n\t\tif xl <= xr:\n\t\t\tres = xl + 1\n\t\t\tif l > 1:\n\t\t\t\tres += (r - l) + 1\n\t\telse:\n\t\t\tres = xr + 1\n\t\t\tif r < n:\n\t\t\t\tres += (r - l) + 1\n\nprint(res)", "n,p,l,r=map(int,input().split())\nif l==1 and r==n:print(0)\nelif l==1:print(abs(r-p)+1)\nelif r==n:print(abs(p-l)+1)\nelse:print(min(abs(p-l),abs(r-p))+2+r-l)", "n, pos, l, r = list(map(int, input().split()))\n\nif l == 1 and r == n:\n    print(0)\nelif l == 1:\n    print(abs(r - pos) + 1)\nelif r == n:\n    print(abs(l - pos) + 1)\nelse:\n    print(min(abs(l - pos) + 1 + r - l + 1, abs(r - pos) + 1 + r - l + 1))\n", "n, pos, l, r = map(int, input().split())\n\ndef solve(n,pos,l,r):\n    if l == 1 and r == n:\n        return 0\n    elif l == 1:\n        return abs(pos-r)+1\n    elif r == n:\n        return abs(pos-l)+1\n    else:\n        if l <= pos and pos <= r:\n            return abs(r-l) + min(abs(pos-l),abs(pos-r))+2\n        elif pos < l:\n            return abs(pos-l) + abs(r-l) + 2\n        else:\n            return abs(pos-r) + abs(r-l) + 2\n\nprint(solve(n,pos,l,r))", "n, pos, l, r = map(int, input().split())\nif r == n and l == 1:\n    print(0)\nelif r == n:\n    print(abs(pos - l) + 1)\nelif l == 1:\n    print(abs(r - pos) + 1)\nelse:\n    s1 = abs(r - pos)\n    s2 = abs(l - pos)\n    print(min(s1, s2) + (r - l) + 2)", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\n\ndef main():\n    n, pos, l, r = [int(_) for _ in input().split(' ')]\n    if l is 1 and r == n:\n        print(0)\n        return\n    if l is 1:\n        print(abs(r - pos) + 1)\n        return\n    if r == n:\n        print(abs(l - pos) + 1)\n        return\n    print(min(abs(l - pos), abs(r - pos)) + (r - l) + 2)\n\n\nmain()\n", "\nn, pos, l, r = list(map(int, input().split()))\n\nleft_first = 10**6\nright_first = 10**6\n\nif l == 1 and r == n:\n    left_first = 0\nelif l == 1:\n    if pos < r:\n        right_first = r - pos + 1\n    else:\n        right_first = pos - r + 1\nelif r == n:\n    if pos < l:\n        left_first = l - pos + 1\n    else:\n        left_first = pos - l + 1\nelif pos < l:\n    left_first = l - pos + 1 + r - l + 1\nelif l <= pos <= r:\n    left_first = pos - l + r - l + 2\n    right_first = r - pos + r - l + 2\nelse:\n    right_first = pos - r + r - l + 2\n\nprint(min([left_first, right_first]))\n", "n, pos, l, r = [int(v) for v in input().split()]\n\nneedleft = l > 1\nneedright = r < n\nif needleft:\n    if needright:\n        dl = abs(pos - l)\n        dr = abs(pos - r)\n        print(min(dl, dr) + 1 + r - l + 1)\n    else:\n        print(abs(pos - l) + 1)\nelse:\n    if needright:\n        print(abs(pos - r) + 1)\n    else:\n        print(0)\n", "n,p,l,r = list(map(int,input().split()))\nif l>1 and r<n:\n    t1 = abs(p-l)+(r-l)\n    t2 = abs(p-r)+(r-l)\n    print(min(t1,t2)+2)\nelif l>1 and r == n:\n    print(abs(p-l)+1)\nelif l==1 and r < n:\n    print(abs(p-r)+1)\nelse:print(0)\n", "def main():\n\tn, pos, l, r = map(int, input().split())\n\tans = 0\n\tif l <= pos <= r:\n\t\tif l == 1:\n\t\t\tif r == n:\n\t\t\t\tprint(0)\n\t\t\t\treturn\n\t\t\tans += r - pos + 1\n\t\t\tprint(ans)\n\t\t\treturn\n\t\tif r == n:\n\t\t\tans = pos - l + 1\n\t\t\tprint(ans)\n\t\t\treturn\n\t\tans = min(pos - l, r - pos) + r - l + 2\n\t\tprint(ans)\n\t\treturn\n\tif pos > r:\n\t\tans += pos - r + 1\n\t\tif l > 1:\n\t\t\tans += r - l + 1\n\t\tprint(ans)\n\t\treturn\n\tans += l - pos + 1\n\tif r < n:\n\t\tans += r - l + 1\n\tprint(ans)\n\treturn\n\n\nmain()", "def f(a, b, l, r, i):\n    if a == l and b == r:\n        return 0\n    elif a == l and b > r:\n        return 1 + abs(i - r)\n    elif a < l and b == r:\n        return 1 + abs(i - l)\n    elif a < l and b > r:\n        return 2 + abs(l - r) + min(abs(i - l), abs(i - r))\n\nn, p, l, r = list(map(int, input().split()))\na, b = 1, n\nt = 0\n\nprint(f(a, b, l, r, p))\n", "n, pos, l, r = [int(i) for i in input().split()]\nseconds = 0\n\nif l > 1:\n    seconds += 1\n    if abs(pos - l) < abs(pos - r) or r == n:\n        seconds += abs(pos - l)\n    else:\n        seconds += r - l\n\nif r < n:\n    seconds += 1\n    if abs(pos - l) >= abs(pos - r) or l == 1:\n        seconds += abs(pos - r)\n    else:\n        seconds += r - l\nprint(seconds)", "n,pos,l,r=[int(i) for i in input().split()]\nans=0\n\n\nif l==1 and r==n:\n\tans=0\nelif l==1:\n\tans=abs(r-pos)+1\nelif r==n:\n\tans=abs(pos-l)+1\nelse:\n\tans=r-l+2\n\tif pos<l:\n\t\tans+=l-pos\n\telif l<=pos and pos<=r:\n\t\tif abs(pos-l) < abs(r-pos):\n\t\t\tans+=pos-l\n\t\telse:\n\t\t\tans+=r-pos\n\telse:\n\t\tans+=pos-r\nprint(ans)\n\t\t\n", "# B\n\nimport math\n\nn, pos, l, r = list(map(int, input().split()))\n\nif l == 1 and r == n:\n    print(0)\nelif l == 1:\n    print(int(math.fabs(r - pos) + 1))\nelif r == n:\n    print(int(math.fabs(l - pos) + 1))\nelse:\n    if pos <= l:\n        print(r - pos + 2)\n    elif r <= pos:\n        print(pos - l + 2)\n    else:\n        print(min(pos + r - 2*l, 2*r - l - pos) + 2)\n", "n,pos,l,r = map(int,input().split())\n\nif l == 1 and r == n:\n  print(0)\nelif l == 1:\n  print(abs(r-pos)+1)\nelif r == n:\n  print(abs(l-pos)+1)\nelse:\n  print(min(abs(l-pos),abs(r-pos)) + r-l + 2)", "\nn,pos,l,r = [int(x) for x in input().split(' ')]\nans = 0\nra = abs(pos-r)\nla = abs(pos-l)\nif l==1:\n    if r==n:\n        print(0)\n    else:\n        print(ra+1)\nelse:\n    if r==n:\n        print(la+1)\n    else:\n        if la<ra:\n            print(r-l+2+la)\n        else:\n            print(r-l+2+ra)", "n,pos,l,r  = [int(i) for i in input().split()]\n\ntime_l = 0;\nif l != 1:\n    time_l += abs(pos - l) + 1 # move to l and delete\n    pos1 = l\nelse:\n    pos1 = pos\nif r != n: time_l += abs(r-pos1) + 1 # move to r and delete\n\ntime_r = 0;\nif r != n:\n    time_r += abs(pos - r) + 1 # move to l and delete\n    pos1 = r\nelse:\n    pos1 = pos\nif l != 1: time_r += abs(pos1-l) + 1 # move to r and delete\n\n#print(time_l, time_r)\nprint(min(time_l, time_r))\n"]